/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SistemaCobro;

import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowStateListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

public class Alumno extends javax.swing.JFrame implements MouseListener {

    ConexionSQL conexion = new ConexionSQL();
    PreparedStatement st;
    ResultSet rs;
    Statement stt;
    Connection conn;

    JLabel label = new JLabel();
    ImageIcon iconoinfo = new ImageIcon("/Imagenes/info.png");

    public Alumno() {
        initComponents();
        TableColumn columnaAlumno;
        columnaAlumno = TablaAlumno.getColumnModel().getColumn(1);
        columnaAlumno.setPreferredWidth(220);
        TableColumn columnaEstado;
        columnaEstado = TablaAlumno.getColumnModel().getColumn(2);
        columnaEstado.setPreferredWidth(40);
        TableColumn columnaNumeroControl;
        columnaNumeroControl = TablaAlumno.getColumnModel().getColumn(0);
        columnaNumeroControl.setPreferredWidth(60);
        TableColumn columnabtnMasinfo;
        columnabtnMasinfo = TablaAlumno.getColumnModel().getColumn(3);
        columnabtnMasinfo.setPreferredWidth(15);
        TablaAlumno.setRowHeight(25);
        TableColumn columnabtnEditar;
        columnabtnEditar = TablaAlumno.getColumnModel().getColumn(4);
        columnabtnEditar.setPreferredWidth(15);
        TableColumn columnabtnEliminar;
        columnabtnEliminar = TablaAlumno.getColumnModel().getColumn(5);
        columnabtnEliminar.setPreferredWidth(15);
        TablaAlumno.addMouseListener(this);
        contenidoTabla();

    }

    public void contenidoTabla() {
        TablaAlumno.setDefaultRenderer(Object.class, new ImgTable());
        PreparedStatement sql = null;
        ResultSet rs = null;
        conn = ConexionSQL.conectar();
        DefaultTableModel model = (DefaultTableModel) TablaAlumno.getModel();
        try {
            sql = conn.prepareStatement("SELECT NumeroControl,NombrePila,PrimerApellido,SegundoApellido,Status FROM alumno ORDER BY NumeroControl;");
            if (model.getRowCount() != 0) {
                int a = 0;
                while (a < model.getRowCount()) {
                    model.removeRow(a);
                }
            }
            rs = sql.executeQuery();
            for (int i = 0; rs.next(); i++) {
                String nombreCompleto = rs.getString("NombrePila") + " " + rs.getString("PrimerApellido") + " " + rs.getString("SegundoApellido");
                model.addRow(new Object[]{rs.getInt("NumeroControl"), nombreCompleto, status(rs.getString("Status")), new JLabel(new ImageIcon(getClass().getResource("/Imagenes/info.png"))),new JLabel(new ImageIcon(getClass().getResource("/Imagenes/editar.png"))),new JLabel(new ImageIcon(getClass().getResource("/Imagenes/eliminar.png")))});
                //TablaAlumno.setValueAt((rs.getInt("NumeroControl")), i, 0);
                //String nombreCompleto = rs.getString("NombrePila") + " " + rs.getString("PrimerApellido") + " " + rs.getString("SegundoApellido");
                //TablaAlumno.setValueAt(nombreCompleto, i, 1);
                //if (rs.getString("Status").equals("Activo")) {
                //    TablaAlumno.setValueAt("Activo", i, 2);
                //} else {
                //    TablaAlumno.setValueAt("Baja", i, 2);
                //}
                //System.out.println(labe);
                //TablaAlumno.setValueAt(informacion, i, 3);

            }
        } catch (SQLException e) {
            System.out.println(e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaAlumno = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        LabelNumeroControl = new javax.swing.JLabel();
        NumeroControl = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        btnMin = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(10, 31, 34));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        TablaAlumno.setBackground(new java.awt.Color(167, 167, 167));
        TablaAlumno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num.de Control", "Nombre Completo", "Estado", "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaAlumno);
        if (TablaAlumno.getColumnModel().getColumnCount() > 0) {
            TablaAlumno.getColumnModel().getColumn(0).setResizable(false);
            TablaAlumno.getColumnModel().getColumn(1).setResizable(false);
            TablaAlumno.getColumnModel().getColumn(2).setResizable(false);
            TablaAlumno.getColumnModel().getColumn(3).setResizable(false);
            TablaAlumno.getColumnModel().getColumn(4).setResizable(false);
            TablaAlumno.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 710, 340));

        btnSalir.setBackground(new java.awt.Color(10, 31, 34));
        btnSalir.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("CANCELAR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 590, -1, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BUSQUEDA POR ALUMNO");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        btnBuscar.setBackground(new java.awt.Color(10, 31, 34));
        btnBuscar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 110, 40));

        btnMostrar.setBackground(new java.awt.Color(10, 31, 34));
        btnMostrar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        btnMostrar.setForeground(new java.awt.Color(255, 255, 255));
        btnMostrar.setText("MOSTRAR TODOS");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnMostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 590, 180, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 40)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ALUMNOS");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        LabelNumeroControl.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        LabelNumeroControl.setForeground(new java.awt.Color(255, 255, 255));
        LabelNumeroControl.setText("NÚMERO DE CONTROL:");
        jPanel1.add(LabelNumeroControl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        NumeroControl.setBackground(new java.awt.Color(10, 31, 34));
        NumeroControl.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        NumeroControl.setForeground(new java.awt.Color(63, 189, 211));
        NumeroControl.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NumeroControl.setBorder(null);
        NumeroControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumeroControlActionPerformed(evt);
            }
        });
        jPanel1.add(NumeroControl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 160, 40));

        jSeparator2.setForeground(new java.awt.Color(63, 189, 211));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, 160, 17));

        btnMin.setBackground(new java.awt.Color(10, 31, 34));
        btnMin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes2/icons8_minus_40px.png"))); // NOI18N
        btnMin.setBorder(null);
        btnMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinActionPerformed(evt);
            }
        });
        jPanel1.add(btnMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 10, -1, -1));

        btnExit.setBackground(new java.awt.Color(10, 31, 34));
        btnExit.setFont(new java.awt.Font("Segoe UI Semilight", 0, 11)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes2/icons8_cancel_40px.png"))); // NOI18N
        btnExit.setBorder(null);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jPanel1.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
       // Consultas con = new Consultas();
        //con.setTitle("Consultar pagos y alumnos");
        //con.setLocationRelativeTo(null);
        //con.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void NumeroControlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumeroControlActionPerformed

    }//GEN-LAST:event_NumeroControlActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        PreparedStatement sql = null;
        ResultSet rs = null;
        conn = ConexionSQL.conectar();
        String nc = NumeroControl.getText();
        DefaultTableModel model = (DefaultTableModel) TablaAlumno.getModel();
        try {
            sql = conn.prepareStatement("SELECT NumeroControl,NombrePila,PrimerApellido,SegundoApellido,Status FROM alumno WHERE NumeroControl=" + nc + ";");
            if (model.getRowCount() != 0) {
                int a = 0;
                while (a < model.getRowCount()) {
                    model.removeRow(a);
                }
            }
            rs = sql.executeQuery();
            if (rs.next()) {
                
                String nombreCompleto = rs.getString("NombrePila") + " " + rs.getString("PrimerApellido") + " " + rs.getString("SegundoApellido");
                model.addRow(new Object[]{rs.getInt("NumeroControl"), nombreCompleto, status(rs.getString("Status")), new JLabel(new ImageIcon(getClass().getResource("/Imagenes/info.png"))),new JLabel(new ImageIcon(getClass().getResource("/Imagenes/editar.png"))),new JLabel(new ImageIcon(getClass().getResource("/Imagenes/eliminar.png")))});
               
                //model.addRow(new Object[]{});
                //TablaAlumno.setValueAt((rs.getInt("NumeroControl")), 0, 0);
                //String nombreCompleto = rs.getString("NombrePila") + " " + rs.getString("PrimerApellido") + " " + rs.getString("SegundoApellido");
                //TablaAlumno.setValueAt(nombreCompleto, 0, 1);
                //if (rs.getString("Status").equals("Activo")) {
                //    TablaAlumno.setValueAt("Activo", 0, 2);
                //} else {
                //    TablaAlumno.setValueAt("En baja", 0, 2);
                //}

            } else {
                JOptionPane.showMessageDialog(null, "No se encontro el Numero de Control que se intenta buscar.", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        contenidoTabla();
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        Actualiza_Tabla();
    }//GEN-LAST:event_formWindowGainedFocus

    private void btnMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinActionPerformed
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_btnMinActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void eliminar(String NControl) {
        int desicion = JOptionPane.showConfirmDialog(null, "La informacion del alumno se borrara de la base de datos.\n"
                + "¿Seguro que se desea eliminar al Alumno?", "Eliminar", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (desicion == 0) {
            PreparedStatement sql = null;
            ResultSet rs = null;
            conn = ConexionSQL.conectar();
            //cambiar por Numero de control de la fila
            String nc = NumeroControl.getText();
            DefaultTableModel model = (DefaultTableModel) TablaAlumno.getModel();
            try {
                sql = conn.prepareStatement("DELETE FROM alumno WHERE NumeroControl = " + NControl + ";");
                
                int s = sql.executeUpdate();
                if (s != 0) {
                    JOptionPane.showMessageDialog(null, "El alumno fue eliminado de la base de datos.", "Eliminado", JOptionPane.INFORMATION_MESSAGE);
                    Actualiza_Tabla();
                } else {
                    JOptionPane.showMessageDialog(null, "Ups! Algo salio mal", "Error!", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                System.out.println(e);
            }
        }

    }
    private void Actualiza_Tabla(){
        TablaAlumno.setDefaultRenderer(Object.class, new ImgTable());
        PreparedStatement sql = null;
        ResultSet rs = null;
        conn = ConexionSQL.conectar();
        DefaultTableModel model = (DefaultTableModel) TablaAlumno.getModel();
        try {
            sql = conn.prepareStatement("SELECT NumeroControl,NombrePila,PrimerApellido,SegundoApellido,Status FROM alumno ORDER BY NumeroControl;");
            if (model.getRowCount() != 0) {
                int a = 0;
                while (a < model.getRowCount()) {
                    model.removeRow(a);
                }
            }
            rs = sql.executeQuery();
            for (int i = 0; rs.next(); i++) {
                String nombreCompleto = rs.getString("NombrePila") + " " + rs.getString("PrimerApellido") + " " + rs.getString("SegundoApellido");
                model.addRow(new Object[]{rs.getInt("NumeroControl"), nombreCompleto, status(rs.getString("Status")), new JLabel(new ImageIcon(getClass().getResource("/Imagenes/info.png"))),new JLabel(new ImageIcon(getClass().getResource("/Imagenes/editar.png"))),new JLabel(new ImageIcon(getClass().getResource("/Imagenes/eliminar.png")))});
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    private void editar(int NoControl) {
        EditarAlumno a = new EditarAlumno();
        a.imprimir(NoControl, "");
        a.setLocationRelativeTo(null);
        a.setVisible(true);
    }

    private String masinfo(String nc) {
        PreparedStatement sql = null;
        ResultSet rs = null;
        conn = ConexionSQL.conectar();
        String info = "";
        //cambiar por numero de control de la columna
        try {
            sql = conn.prepareStatement("SELECT * FROM alumno WHERE NumeroControl=" + nc + ";");

            rs = sql.executeQuery();
            if (rs.next()) {
                info = "Numero de control: " + rs.getInt("NumeroControl") + "\nNombre: " + rs.getString("NombrePila")
                        + "\nPrimer Apellido: " + rs.getString("PrimerApellido") + "\nSegundo Apellido: " + rs.getString("SegundoApellido") + "\nCURP: " + rs.getString("CURP")
                        + "\nRFC: " + rs.getString("RFC") + "\nEmail: " + rs.getString("Email") + "\nTelefono: " + rs.getString("Telefono") + "\nTelefono de Emergencia: " + rs.getString("TelefonoEmergencia")
                        + "\nFecha de Inscripcion: " + rs.getString("FechaInscripcion") + "\nBeca(%): " + rs.getString("Beca") + "\nEs foraneo: " + rs.getString("Foraneo")
                        + "\n\nDOMICILIO" + "\n#" + rs.getString("NumeroExterno") + " Calle " + rs.getString("Calle") + " Col. " + rs.getString("Colonia");
            } else {
                JOptionPane.showMessageDialog(null, "No se encontro el Numero de Control que se intenta buscar.", "Error!", JOptionPane.ERROR_MESSAGE);
            }
           
        } catch (SQLException e) {
            System.out.println(e);
        }
         return info;
    }

    private String status(String s) {
        if (s.equals("Activo")) {
            return "Activo";
        } else {
            return "Baja";
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelNumeroControl;
    private javax.swing.JTextField NumeroControl;
    private javax.swing.JTable TablaAlumno;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnMin;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        int fila = TablaAlumno.rowAtPoint(e.getPoint());
        int columna = TablaAlumno.columnAtPoint(e.getPoint());
        if (columna == 3 ) {
            String Nocontrol = String.valueOf(TablaAlumno.getValueAt(fila, 0));
            Informacion_Alumno obj = new Informacion_Alumno(Nocontrol);
            obj.setTitle("Información Alumno");
            obj.setLocationRelativeTo(null);
        obj.setLocationRelativeTo(null);
        obj.setVisible(true);
            
            //masinfo(Nocontrol);
        } else if (columna == 4) {
            int Nocontrol = Integer.parseInt(String.valueOf(TablaAlumno.getValueAt(fila, 0)));
            editar(Nocontrol);
        } else if (columna == 5){
            String Nocontrol = String.valueOf(TablaAlumno.getValueAt(fila, 0));
            eliminar(Nocontrol); 
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
   }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }
}
