/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SistemaCobro;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author LEVEN
 */
public class Usuarios extends javax.swing.JFrame implements MouseListener {

    ConexionSQL conexion = new ConexionSQL();
    PreparedStatement st;
    ResultSet rs;
    Statement stt;
    Connection conn;

    /**
     * Creates new form Usuarios
     */
    public Usuarios() {
        initComponents();
        TableColumn columnatipo;
        JViewport scroll = (JViewport) Tabla_Usuarios.getParent();
        int ancho = scroll.getWidth();
        columnatipo = Tabla_Usuarios.getColumnModel().getColumn(1);
        columnatipo.setPreferredWidth((70 * ancho) / 100);
        TableColumn columnausuario;
        columnausuario = Tabla_Usuarios.getColumnModel().getColumn(0);
        columnausuario.setPreferredWidth((70 * ancho) / 100);
        Tabla_Usuarios.setRowHeight(25);
        Tabla_Usuarios.addMouseListener(this);
        actualizar_tabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_Usuarios = new javax.swing.JTable();
        Alta_Usuario = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Tabla_Usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Usuario", "Tipo de Usuario", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tabla_Usuarios);

        Alta_Usuario.setText("Nuevo Usuario");
        Alta_Usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Alta_UsuarioActionPerformed(evt);
            }
        });

        btnSalir.setText("Cancelar");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Alta_Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalir))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Alta_Usuario)
                    .addComponent(btnSalir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void Alta_UsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Alta_UsuarioActionPerformed
        Alta_Usuarios obj = new Alta_Usuarios();
        obj.setTitle("Nuevo Usuario");
        obj.setLocationRelativeTo(null);
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_Alta_UsuarioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Alta_Usuario;
    private javax.swing.JTable Tabla_Usuarios;
    private javax.swing.JButton btnSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    public void actualizar_tabla() {
        Tabla_Usuarios.setDefaultRenderer(Object.class, new ImgTable());
        PreparedStatement sql = null;
        ResultSet rs = null;
        conn = ConexionSQL.conectar();
        DefaultTableModel model = (DefaultTableModel) Tabla_Usuarios.getModel();
        try {
            sql = conn.prepareStatement("SELECT Nombre, Nivel_Acceso, estado FROM usuario ORDER BY Nombre");
            if (model.getRowCount() != 0) {
                int a = 0;
                while (a < model.getRowCount()) {
                    model.removeRow(a);
                }
            }
            rs = sql.executeQuery();
            for (int i = 0; rs.next(); i++) {
                if (rs.getString("estado").equalsIgnoreCase("Activo")) {
                    model.addRow(new Object[]{rs.getString("Nombre"), rs.getString("Nivel_Acceso"), new JLabel(new ImageIcon(getClass().getResource("/Imagenes/activo.png")))});
                } else {
                    model.addRow(new Object[]{rs.getString("Nombre"), rs.getString("Nivel_Acceso"), new JLabel(new ImageIcon(getClass().getResource("/Imagenes/desactivado.png")))});
                }
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        int fila = Tabla_Usuarios.rowAtPoint(e.getPoint());
        int columna = Tabla_Usuarios.columnAtPoint(e.getPoint());
        if (columna == 2) {
            String Usuario = String.valueOf(Tabla_Usuarios.getValueAt(fila, 0));
            String sentencia = "SELECT estado from usuario where nombre = '" + Usuario + "'";
            conn = ConexionSQL.conectar();
            try {
                PreparedStatement sql = null;
                sql = conn.prepareStatement(sentencia);
                rs = sql.executeQuery();
                if (rs.next()) {
                    if (rs.getString("estado").equals("Activo")) {
                        sentencia = "UPDATE usuario set estado = 'Desactivado' where Nombre = '" + Usuario + "'";
                        sql = conn.prepareStatement(sentencia);
                        sql.executeUpdate();
                    }else{
                        sentencia = "UPDATE usuario set estado = 'Activo' where Nombre = '" + Usuario + "'";
                        sql = conn.prepareStatement(sentencia);
                        sql.executeUpdate();
                    }
                }
                actualizar_tabla();
            } catch (Exception en) {
                System.out.println(en);
            }

            //masinfo(Nocontrol);
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }
}
